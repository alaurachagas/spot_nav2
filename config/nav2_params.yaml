map_server:
  ros__parameters:
    use_sim_time: false
    enabled: false               # keep false if Cartographer publishes /map
    yaml_filename: ""            # set this and enabled:true when using a saved map
    topic_name: "/map"
    frame_id: "map"

planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      allow_unknown: true
      tolerance: 0.25
      downsample_costmap: false
      use_astar: false
      # optional Smac QoL:
      # cache_obstacle_heuristic: true
      # minimum_turning_radius: 0.0

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 15.0
    min_x_velocity_threshold: 0.01
    min_y_velocity_threshold: 0.01
    min_theta_velocity_threshold: 0.01
    controller_plugins: ["FollowPath"]
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["goal_checker"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      stateful: true
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.1
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.5
      lookahead_dist: 0.6
      use_velocity_scaled_lookahead_dist: true
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      transform_tolerance: 0.2
      use_rotate_to_heading: true
      allow_reversing: false
      max_angular_accel: 2.0
      max_angular_vel: 1.5
      regulate_linear_vel: true
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      cmd_vel_topic: "/cmd_vel"

bt_navigator:
  ros__parameters:
    use_sim_time: false
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    global_frame: "map"
    robot_base_frame: "body"
    odom_topic: "/odometry"     # ☆ Remove unless you truly have this topic

waypoint_follower:
  ros__parameters:
    use_sim_time: false

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: "map"
      robot_base_frame: "body"
      transform_tolerance: 0.25         # ☆ tolerate TF latency
      update_frequency: 5.0
      publish_frequency: 2.0
      resolution: 0.05
      footprint: "[[ 0.70,  0.35],[ 0.70, -0.35],[-0.70, -0.35],[-0.70,  0.35]]"
      footprint_padding: 0.05
      rolling_window: false
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true   # Cartographer /map is latched
        subscribe_to_updates: false           # Cartographer republishes full maps
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: lidar
        lidar:
          topic: "/velodyne_points_cartographer"           # or a filtered topic if you prefer
          data_type: "PointCloud2"
          marking: true
          clearing: true
          obstacle_range: 8.0
          raytrace_range: 8.0
          min_z: -0.20
          max_z:  0.80
          expected_update_rate: 0.1          # ☆ 10 Hz sensor ≈ 0.1 s period
          observation_persistence: 0.2       # ☆ keep returns briefly for stability
          clearing_transform_tolerance: 0.25 # ☆
          marking_transform_tolerance:  0.25 # ☆
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.6
        cost_scaling_factor: 3.0

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: "odom"
      robot_base_frame: "body"
      transform_tolerance: 0.25             # ☆ match global tolerance
      update_frequency: 10.0
      publish_frequency: 5.0
      rolling_window: true
      width: 6
      height: 6
      resolution: 0.05
      footprint: "[[ 0.70,  0.35],[ 0.70, -0.35],[-0.70, -0.35],[-0.70,  0.35]]"
      footprint_padding: 0.00
      plugins: ["obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: lidar
        lidar:
          topic: "/velodyne_points"
          data_type: "PointCloud2"
          marking: true
          clearing: true
          obstacle_range: 8.0
          raytrace_range: 8.0
          min_z: -0.20
          max_z:  0.80
          expected_update_rate: 0.1          # ☆
          observation_persistence: 0.2       # ☆
          clearing_transform_tolerance: 0.25 # ☆
          marking_transform_tolerance:  0.25 # ☆
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.6
        cost_scaling_factor: 3.0

lifecycle_manager:
  ros__parameters:
    use_sim_time: false
    autostart: true
    node_names: ["controller_server", "planner_server", "bt_navigator",
                 "waypoint_follower", "behavior_server",
                 "smoother_server", "velocity_smoother"]
